{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY","App","useState","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","handledGoods","sort","g1","g2","localeCompare","length","reverse","sortGoods","className","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACY,iBADZA,EAEI,SA0BH,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAmBC,EAAnB,GAAsD,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WAC/BI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKH,EACHS,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAKZ,EACHS,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAWjD,OAJIT,GACFI,EAAaM,UAGRN,EAMaO,CAAUjB,EAAiB,CAAEI,YAAWE,eAE5D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACAhB,IAAcH,GAA0B,YAE1CoB,QAAS,kBAAMhB,EAAaJ,IAN9B,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACAhB,IAAcH,GAAkB,YAElCoB,QAAS,kBAAMhB,EAAaJ,IAN9B,4BAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,qBACCd,GAAc,YAEjBe,QAAS,kBAAMd,GAAc,SAAAe,GAAI,OAAKA,MANxC,sBAWElB,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAc,GACdF,EAAa,KALjB,sBAaJ,6BACGG,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6640a350.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY = {\n  ALPHABETICALLY: 'ALPHABETICALLY',\n  LENGTH: 'LENGTH',\n};\n\nfunction sortGoods(goods, { sortField, isReversed }) {\n  const handledGoods = [...goods];\n\n  switch (sortField) {\n    case SORT_BY.ALPHABETICALLY:\n      handledGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case SORT_BY.LENGTH:\n      handledGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    handledGoods.reverse();\n  }\n\n  return handledGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = sortGoods(goodsFromServer, { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            sortField !== SORT_BY.ALPHABETICALLY && 'is-light',\n          )}\n          onClick={() => setSortField(SORT_BY.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            sortField !== SORT_BY.LENGTH && 'is-light',\n          )}\n          onClick={() => setSortField(SORT_BY.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            !isReversed && 'is-light',\n          )}\n          onClick={() => setIsReversed(prev => !prev)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortField('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}